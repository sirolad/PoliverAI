"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reactNativeBuildTarget = reactNativeBuildTarget;
exports.expoBuildTarget = expoBuildTarget;
exports.reactNativeTestTarget = reactNativeTestTarget;
exports.expoTestTarget = expoTestTarget;
function reactNativeBuildTarget(platform) {
    return {
        options: {
            detoxConfiguration: `${platform}.debug`,
        },
        configurations: {
            production: {
                detoxConfiguration: `${platform}.release`,
            },
        },
    };
}
function expoBuildTarget(platform) {
    return {
        options: {
            detoxConfiguration: `${platform}.local`,
        },
        configurations: {
            bare: {
                detoxConfiguration: `${platform}.debug`,
            },
            production: {
                detoxConfiguration: `${platform}.release`,
            },
        },
    };
}
function reactNativeTestTarget(platform, e2eName) {
    const buildPlatform = platform === 'ios.sim' ? 'ios' : 'android';
    return {
        options: {
            detoxConfiguration: `${platform}.debug`,
            buildTarget: `${e2eName}:build-${buildPlatform}`,
        },
        configurations: {
            production: {
                detoxConfiguration: `${platform}.release`,
                buildTarget: `${e2eName}:build-${buildPlatform}:production`,
            },
        },
    };
}
function expoTestTarget(platform, e2eName) {
    const buildPlatform = platform === 'ios.sim' ? 'ios' : 'android';
    return {
        options: {
            detoxConfiguration: `${platform}.local`,
            buildTarget: `${e2eName}:build-${buildPlatform}`,
        },
        configurations: {
            bare: {
                detoxConfiguration: `${platform}.debug`,
                buildTarget: `${e2eName}:build-${buildPlatform}:bare`,
            },
            production: {
                detoxConfiguration: `${platform}.release`,
                buildTarget: `${e2eName}:build-${buildPlatform}:production`,
            },
        },
    };
}
