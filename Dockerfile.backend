FROM python:3.11-slim

ARG FAST_DEV=false
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# System deps for some packages and building wheels
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc curl ca-certificates python3-venv && rm -rf /var/lib/apt/lists/*

# Install pip/tools early to cache wheel building step
RUN python3 -m pip install --upgrade pip setuptools wheel virtualenv

# Copy only requirements first to leverage Docker cache when dependencies don't change
COPY requirements.docker.txt requirements.txt requirements.dev.txt /app/

# Create venv outside /app so mounting the project does not overwrite it
RUN python3 -m virtualenv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies. If FAST_DEV is true, install a smaller dev set for faster builds.
RUN if [ "$FAST_DEV" = "true" ] ; then pip install -r /app/requirements.dev.txt ; else if [ -f /app/requirements.docker.txt ]; then pip install -r /app/requirements.docker.txt; elif [ -f /app/requirements.txt ]; then pip install -r /app/requirements.txt; fi; fi

# Copy the rest of the project (use after deps to maximize cache)
COPY . /app

# Ensure run script is executable
RUN chmod +x ./scripts/run_server.sh || true

EXPOSE 8000

# Ensure the venv's bin is on PATH so run_server.sh (which calls uvicorn) uses the venv
CMD ["./scripts/run_server.sh"]
