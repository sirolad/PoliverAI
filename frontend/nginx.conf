 # Docker will resolve service names like `backend` and `frontend_dev` via its embedded DNS.
 # Keep proxy_pass pointing to the Docker service hostnames so nginx resolves at connect time.

server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # Proxy API requests to the backend
  location /api/ {
    proxy_pass http://backend:8000/api/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

  # Socket.IO or websocket endpoints - proxy and support websocket upgrade
  location /socket.io/ {
    proxy_pass http://backend:8000/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # Server-Sent Events / Verify stream endpoint: proxy to backend and disable buffering
  # Accept both /verify-stream and /api/v1/verify-stream clients
  location ^~ /verify-stream {
    proxy_pass http://backend:8000/api/v1/verify-stream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "keep-alive";
    proxy_set_header Upgrade $http_upgrade;
    proxy_buffering off;
    proxy_cache off;
    chunked_transfer_encoding on;
    add_header Cache-Control "no-cache";
    # disable nginx response buffering for SSE
    proxy_set_header X-Accel-Buffering "no";
  }

  location ^~ /api/v1/verify-stream {
    proxy_pass http://backend:8000/api/v1/verify-stream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "keep-alive";
    proxy_set_header Upgrade $http_upgrade;
    proxy_buffering off;
    proxy_cache off;
    chunked_transfer_encoding on;
    add_header Cache-Control "no-cache";
    proxy_set_header X-Accel-Buffering "no";
  }

  # In dev: proxy to Vite dev server running in a separate container at frontend_dev:5173
  # In production: this will fall back to serving static files from /usr/share/nginx/html
  location / {
    proxy_pass http://frontend_dev:5173/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    # If frontend_dev is not reachable, try to serve static files (production build)
    error_page 502 = /index.html;
  }
}

# Note: HTTPS server block removed for development to avoid nginx failing to
# start when TLS certs are not mounted. If you need nginx to terminate TLS,
# re-add a 443 server block with proper certificate mounts.
