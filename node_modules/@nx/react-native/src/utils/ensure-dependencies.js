"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureDependencies = ensureDependencies;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("@nx/react/src/utils/versions");
const versions_2 = require("./versions");
function ensureDependencies(tree, unitTestRunner) {
    const isPnpm = (0, devkit_1.detectPackageManager)(tree.root) === 'pnpm';
    return (0, devkit_1.addDependenciesToPackageJson)(tree, {}, {
        '@types/node': versions_2.typesNodeVersion,
        '@types/react': versions_2.typesReactVersion,
        '@react-native/babel-preset': versions_2.reactNativeBabelPresetVersion,
        '@react-native/metro-config': versions_2.reactNativeMetroConfigVersion,
        '@react-native-community/cli': versions_2.reactNativeCommunityCliVersion,
        '@react-native-community/cli-platform-android': versions_2.reactNativeCommunityCliPlatformAndroidVersion,
        '@react-native-community/cli-platform-ios': versions_2.reactNativeCommunityCliPlatformIosVersion,
        'react-native-svg-transformer': versions_2.reactNativeSvgTransformerVersion,
        'react-native-svg': versions_2.reactNativeSvgVersion,
        '@babel/preset-react': versions_1.babelPresetReactVersion,
        '@babel/core': versions_1.babelCoreVersion,
        ...(unitTestRunner === 'jest'
            ? {
                '@testing-library/react-native': versions_2.testingLibraryReactNativeVersion,
                'react-test-renderer': versions_2.reactTestRendererVersion,
            }
            : {}),
        ...(isPnpm
            ? {
                '@babel/runtime': versions_2.babelRuntimeVersion, // @babel/runtime is used by react-native-svg
            }
            : {}),
    });
}
